<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<http auto-config="true" use-expressions="true">
		<!-- <intercept-url pattern="/admin**" access="ROLE_ADMINISTRATOR" /> -->
		<intercept-url pattern="/admin**" access="hasRole('admin')" />
		<form-login 
		login-page="/login" default-target-url="/welcome"
		authentication-failure-url="/login?error" 
		username-parameter="username" password-parameter="password" />
		<logout logout-success-url="/login?logout"/>
		<!-- Enable CSRF protection -->
		<csrf/>
		<!-- access denied page -->
		<access-denied-handler error-page="/403" />
	</http>
	<!-- Taking users from xml hardcoded
	<authentication-manager>
		<authentication-provider>
			<user-service>
				<user name="rk" password="123456" authorities="ROLE_ADMINISTRATOR" />
			</user-service>
		</authentication-provider>
	</authentication-manager>
	 -->
	<!-- Select users and user_roles from database -->
	<authentication-manager>
	  <authentication-provider user-service-ref="userDetailsService">
	  	<password-encoder hash="plaintext"/>
	  </authentication-provider>
	</authentication-manager>
<!-- 
		<jdbc-user-service data-source-ref="mysqlDataSource"
		  users-by-username-query=
		    "select username,password from INV_Users where username=?"
		  authorities-by-username-query=
		    "select username, rolename from inv_user_role where username =?  " /> -->
</beans:beans>